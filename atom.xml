<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://horiejunkie.github.io/atom.xml" rel="self"/>
  
  <link href="https://horiejunkie.github.io/"/>
  <updated>2023-06-11T08:10:05.000Z</updated>
  <id>https://horiejunkie.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>解决macOS的间歇性卡死问题</title>
    <link href="https://horiejunkie.github.io/article/77b3be67/"/>
    <id>https://horiejunkie.github.io/article/77b3be67/</id>
    <published>2023-06-10T12:43:44.000Z</published>
    <updated>2023-06-11T08:10:05.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-前言"><a href="#1-前言" class="headerlink" title="1. 前言"></a>1. 前言</h2><p>我使用M1 macbook air，系统为macOS Venture，使用过程中，会间歇性遭遇到系统卡死问题。出现问题时，各app均无法控制，键盘输入卡顿显著，鼠标持续呈彩虹圈，但已打开的app（如正在播放的音乐等）仍能正常工作。重启系统后问题解决，但过一段时间（1～2天后）问题又会再度出现。</p><p>经过长时间的搜索，最终确定该问题是由macOS的原生中文输入法导致的。该问题隐蔽又难以定位，且仅在体量本来就较小的macOS中文圈才存在。这个问题似乎在很早期版本的macOS就存在并持续至今，但并非会在所有用户的macOS中出现。问题的具体原因仍不清楚。</p><p>接下来给出几种解决该问题的方法。</p><h2 id="2-解决方法"><a href="#2-解决方法" class="headerlink" title="2. 解决方法"></a>2. 解决方法</h2><h3 id="2-1-出现卡死时，杀掉输入法进程"><a href="#2-1-出现卡死时，杀掉输入法进程" class="headerlink" title="2.1. 出现卡死时，杀掉输入法进程"></a>2.1. 出现卡死时，杀掉输入法进程</h3><p>处于卡死状态时，杀掉输入法进程即可让系统恢复常态。有以下几种选择：</p><h4 id="2-1-1-从任务监视器杀掉进程"><a href="#2-1-1-从任务监视器杀掉进程" class="headerlink" title="2.1.1. 从任务监视器杀掉进程"></a>2.1.1. 从任务监视器杀掉进程</h4><p>打开任务监视器，如下图找到中文输入法进程，点quit关掉它。</p><img src="/article/77b3be67/1.png" class="" title="杀死中文输入法进程"><h4 id="2-1-2-从终端杀掉进程"><a href="#2-1-2-从终端杀掉进程" class="headerlink" title="2.1.2. 从终端杀掉进程"></a>2.1.2. 从终端杀掉进程</h4><p>打开终端，输入并执行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">kill</span> <span class="token variable"><span class="token variable">`</span>pgrep SCIM<span class="token variable">`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>以上代码中：</p><ul><li>kill：发送一个强制杀死的信号给指定的进程。</li><li><code>pgrep SCIM</code>：查找所有名称为 SCIM 的进程，并返回它们的 PID （进程 ID）。注意这里输入的是<strong>反引号</strong>（&#96;，键盘1左边的那个按键）而不是单引号。</li></ul></blockquote><h4 id="2-1-3-预设杀进程脚本"><a href="#2-1-3-预设杀进程脚本" class="headerlink" title="2.1.3. 预设杀进程脚本"></a>2.1.3. 预设杀进程脚本</h4><p>在系统卡死的情况下，输入这串代码也不是那么容易。一种替代的办法是使用工作流app，在卡死时执行预设的这段代码，帮我们省下敲键盘的时间。</p><p>以最常用的Alfred为例，在工作流中新建一个两步的工作流，第一步是键盘输入，名称随便起，但唤起该工作流的关键词越短越好（卡死的时候输入每一个字符都很耗时），我这里设置的是doit：</p><img src="/article/77b3be67/2.png" class="" title="键盘输入"><p>第二步是执行脚本，按下图设置：</p><img src="/article/77b3be67/3.png" class="" title="执行脚本"><p>这样，在卡死的时候，唤起Alfred，输入doit即可执行前文杀掉输入法进程的命令，省下一些卡死的时间。</p><h3 id="2-2-预设定时杀脚本任务"><a href="#2-2-预设定时杀脚本任务" class="headerlink" title="2.2. 预设定时杀脚本任务"></a>2.2. 预设定时杀脚本任务</h3><p>以上杀脚本的方法可以临时解决卡死问题，但始终是治标不治本。我们不希望卡死的状态在一些诸如会议的时刻发生。那么可以预设一个定时杀脚本的任务。</p><blockquote><p>macOS执行定期脚本的工具是cron。它可以让用户在指定的时间间隔内执行某个命令或者某些脚本。一个 cron表达式通常由6个或7个用空格或者制表符分隔的时间字段组成，包括秒、分、小时、日期、月份和星期几。例如：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">30</span> <span class="token number">5</span> * * * /usr/bin/reboot<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个cron表示在每天的凌晨5点30分钟重启计算机。</p></blockquote><p>接下来我们来设置一个定期杀输入法进程的任务。打开终端，输入并执行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">corntab <span class="token parameter variable">-e</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>这里的<code>-e</code>将执行文字编辑器来设置corn任务。如果你没有设置过环境变量，默认的编辑器是VI。还有其他可执行的命令包括：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">corntab <span class="token parameter variable">-l</span> <span class="token comment">#显示当前的任务列表</span>corntab <span class="token parameter variable">-r</span> <span class="token comment">#删除当前的任务列表</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></blockquote><p>执行命令后，我们会看到如下提示符：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">□~~~~~~~~<span class="token string">"/tmp/crontab.LUSbqPLkBv"</span> 1L, 30B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在显示的是一个空白的cron文件。<code>□</code>是我们的游标位置，<code>~</code>显示这个文件中没有任何内容。我们可以用方向键控制游标在文件中的位置。</p><p>VI编辑器有三种模式，我们现在处于命令模式。点击快捷键<code>i</code>进入编辑模式，会看到下方提示符变为了：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">--INSERT--<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此时从命令模式进入编辑模式，输入下列定时任务：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token number">0</span> */2 * * * <span class="token function">kill</span> <span class="token variable"><span class="token variable">`</span>pgrep SCIM<span class="token variable">`</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>*/n</code>的意思是每隔n个时间（根据所在位置决定），那么该代码的意思就是每2小时执行一次杀死输入法进程的命令。然后点<code>Esc</code>回到命令模式，输入并执行：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">:wq<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>执行后会从cron文件中退出。再次输入：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">corntab <span class="token parameter variable">-l</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果设置成功的话，我们会看到刚刚设置的定时任务。定时杀死输入法进程的任务也就设置好了。但经测试，进程卡死的发生存在随机性，这种方法也不能完全根除这个问题。</p><h3 id="2-3-其他可能有效的方法"><a href="#2-3-其他可能有效的方法" class="headerlink" title="2.3. 其他可能有效的方法"></a>2.3. 其他可能有效的方法</h3><p>最简单有效的方法是不使用macOS原生的中文输入法。但因为一个bug而弃用整个输入法未免有些因噎废食。</p><p><a href="https://medium.com/@tobemaster/%E8%A7%A3%E5%86%B3-mac-%E4%B8%AD%E6%96%87%E8%BE%93%E5%85%A5%E6%B3%95%E5%8D%A1%E9%A1%BF-4a8ab8a30415">这篇文章</a>给出了一系列调整可能导致该问题的设置的方法，包括节电模式、自定义短语、Chrome等，但这些问题在我的macOS上并不存在，也许会对一部分用户起作用，可以尝试。</p><p>bilibili的<a href="https://www.bilibili.com/video/BV1h24y1r7YK">这个视频</a>表示关闭<code>Capslock</code>的中英切换可以解决问题，评论也表示关闭“触控栏输入建议”也可以解决问题。我不希望关闭<code>Capslock</code>的切换功能。各位也可以尝试一下。</p><h2 id="3-鸣谢"><a href="#3-鸣谢" class="headerlink" title="3. 鸣谢"></a>3. 鸣谢</h2><p>最初找到这个问题的原因是在V2EX的<a href="https://www.v2ex.com/t/898744">这个帖子</a>，并根据简书上的<a href="https://www.jianshu.com/p/ec2729d485a8">这篇文章</a>设置了杀进程的任务。感谢文章中提及的所有内容贡献者，希望这个bug早日得到修复。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-前言&quot;&gt;&lt;a href=&quot;#1-前言&quot; class=&quot;headerlink&quot; title=&quot;1. 前言&quot;&gt;&lt;/a&gt;1. 前言&lt;/h2&gt;&lt;p&gt;我使用M1 macbook air，系统为macOS Venture，使用过程中，会间歇性遭遇到系统卡死问题。出现问题时</summary>
      
    
    
    
    <category term="technology" scheme="https://horiejunkie.github.io/categories/technology/"/>
    
    
    <category term="macOS" scheme="https://horiejunkie.github.io/tags/macOS/"/>
    
  </entry>
  
  <entry>
    <title>My First Blog!</title>
    <link href="https://horiejunkie.github.io/article/843b0170/"/>
    <id>https://horiejunkie.github.io/article/843b0170/</id>
    <published>2023-06-10T06:53:29.000Z</published>
    <updated>2023-06-11T15:00:43.304Z</updated>
    
    <content type="html"><![CDATA[<p>Hello, world!</p><p>This is my first blog! I quite spent some time on it. I’m a extremely beginner of coding work and I hope such time on my blog become kind of hobby in my spare time.</p><p>Thanks for detailed tutorials on building the github-based blog in the Internet. I hope I could make a more updated guide based on these brilliant work in the near future. And thanks for <a href="https://github.com/adisaktijrs/hexo-theme-minima">adisaktijrs’s nice theme</a> which I am using on this page. This is my favorite one among Hexo Theme’s page.</p><p>How about let’s start with it!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Hello, world!&lt;/p&gt;
&lt;p&gt;This is my first blog! I quite spent some time on it. I’m a extremely beginner of coding work and I hope such time o</summary>
      
    
    
    
    
  </entry>
  
</feed>
